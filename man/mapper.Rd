% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapper.R
\name{mapper}
\alias{mapper}
\title{mapper function}
\usage{
mapper(dist_object, filter_values, num_intervals, percent_overlap,
  num_bins_when_clustering)
}
\arguments{
\item{filter_values}{A n x m data frame of real numbers.}

\item{num_intervals}{A length m vector of positive integers.}

\item{percent_overlap}{A length m vector of numbers between 0 and 100 specifying how much adjacent intervals should overlap.}

\item{num_bins_when_clustering}{A positive integer that controls whether points in the same level set end up in the same cluster.}

\item{distance_matrix}{An n x n matrix of pairwise dissimilarities.}
}
\value{
An object of class \code{TDAmapper} which is a list of items named \code{adjacency} (adjacency matrix for the edges), \code{num_vertices} (integer number of vertices), \code{level_of_vertex} (vector with \code{level_of_vertex[i]} = index of the level set for vertex i), \code{points_in_vertex} (list with \code{points_in_vertex[[i]]} = vector of indices of points in vertex i), \code{points_in_level} (list with \code{points_in_level[[i]]} = vector of indices of points in level set i, and \code{vertices_in_level} (list with \code{vertices_in_level[[i]]} = vector of indices of vertices in level set i.
}
\description{
This function uses a filter function f: X -> R^m on a data set X that has n rows (observations) and k columns (variables).
}
\examples{
X <- data.frame( x=2*cos(0.5*(1:100)), y=sin(1:100) )
f <- X
m1 <- mapper(
       distance_matrix = dist(X),
       filter_values = f[,1:2],
       num_intervals = c(10,10),
       percent_overlap = c(50,50),
       num_bins_when_clustering = 10)
\dontrun{
#install.packages("igraph") 
library(igraph)
g1 <- graph.adjacency(m1$adjacency, mode="undirected")
plot(g1, layout = layout.auto(g1) )
}

}
\references{
\url{https://github.com/paultpearson/TDAmapper}
}
\seealso{
\code{\link{mapper1D}}, \code{\link{mapper2D}}
}
\author{
Paul Pearson, \email{pearsonp@hope.edu}
}
\keyword{mapper}
